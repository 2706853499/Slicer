#ifndef __vtkCustomLayoutGUI_h
#define __vtkCustomLayoutGUI_h

#include "vtkCustomLayoutWin32Header.h"
#include "vtkSlicerModuleGUI.h"

#include "vtkMRMLScene.h"
#include "vtkCustomLayoutLogic.h"
#include "vtkMRMLCustomLayoutNode.h"

class vtkKWFrame;
class vtkKWNotebook;
class vtkKWLabel;
class vtkKWFrameWithLabel;
class vtkSlicerModuleCollapsibleFrame;
class vtkKWPushButton;
class vtkKWEntry;
class vtkKWEntryWithLabel;
class vtkKWTopLevel;
class vtkKWMenuButton;
class vtkKWCanvas;
class vtkIntArray;

class VTK_CUSTOMLAYOUT_EXPORT vtkCustomLayoutGUI : public vtkSlicerComponentGUI
{
  public:
  static vtkCustomLayoutGUI *New();
  vtkTypeMacro(vtkCustomLayoutGUI,vtkSlicerComponentGUI);
  void PrintSelf(ostream& os, vtkIndent indent);

  // Description:
  // Set the logic pointer from parent class pointer.
  // Overloads implementation in vtkSlicerModulesGUI
  // to allow loadable modules.
  virtual void SetModuleLogic ( vtkSlicerLogic *logic )
  {
  this->SetLogic(reinterpret_cast<vtkCustomLayoutLogic*> (logic)); 
  }

   // Description: Get/Set MRML node
  vtkGetObjectMacro (Logic, vtkCustomLayoutLogic);
  vtkSetObjectMacro (Logic, vtkCustomLayoutLogic);
  
  // Description: Get/Set MRML node
  vtkGetObjectMacro (CustomLayoutNode, vtkMRMLCustomLayoutNode);
  vtkSetObjectMacro (CustomLayoutNode, vtkMRMLCustomLayoutNode);

  // Description: Get/Set Frame that contains specification widgets.
  vtkGetObjectMacro ( SpecificationFrame, vtkSlicerModuleCollapsibleFrame);

  // Description: Get/Set Frame that contains text feedback.
  vtkGetObjectMacro ( EchoFrame, vtkSlicerModuleCollapsibleFrame);

  // Description:
  // Get the entry widget used to specify number of rows of "panes" in the grid.
  vtkGetObjectMacro ( RowEntry, vtkKWEntry);

  // Description:
  // Get the entry widget used to specify number of columns of "panes" in the grid.
  vtkGetObjectMacro ( ColumnEntry, vtkKWEntry);

  // Description:
  // Get the entry widget used to specify number of columns in the grid.
  vtkGetObjectMacro ( LayoutNameEntry, vtkKWEntry);

  // Description:
  // Get the entry widget used to specify number of columns in the grid.
  vtkGetObjectMacro ( ContentMenu, vtkKWMenu );

  // Description:
  // Get the entry widget used to specify number of columns in the grid.
  vtkGetObjectMacro ( SplitPaneMenu, vtkKWMenu );

  virtual void BuildGUI ( );
  virtual void TearDownGUI ( );

  vtkIntArray *NewObservableEvents();

  // Description:
  // Add obsereves to GUI widgets
  virtual void AddGUIObservers ( );

  // Description:
  // Remove obsereves to GUI widgets
  virtual void RemoveGUIObservers ( );
  virtual void RemoveMRMLNodeObservers ( );
  virtual void RemoveLogicObservers ( );
  
  // Description:
  // Pprocess events generated by Logic
  virtual void ProcessLogicEvents ( vtkObject *caller, unsigned long event,
                                  void *callData ){};

  // Description:
  // Pprocess events generated by GUI widgets
  virtual void ProcessGUIEvents ( vtkObject *caller, unsigned long event,
                                  void *callData );

  // Description:
  // Pprocess events generated by MRML
  virtual void ProcessMRMLEvents ( vtkObject *caller, unsigned long event, 
                                  void *callData);
  // Description:
  // Pops up a window into which the name of a new server
  // can be added. There is currently no check for whether
  // the server is valid. 
  void RaiseSplitPaneMenu();
  void WithdrawSplitPaneMenu();
  void DestroySplitPaneMenu();

  void RaiseContentMenu();
  void WithdrawContentMenu();
  void DestroyContentMenu();

  // Description:
  // Describe behavior at module startup and exit.
  virtual void Enter ( );
  virtual void Exit ( );
  virtual void Init ( );

  // Description:
  // Get the categorization of the module.  The category is used for
  // grouping modules together into menus.
  const char *GetCategory() const {return "CustomizationTools";}

protected:
  vtkCustomLayoutGUI();
  ~vtkCustomLayoutGUI();
  vtkCustomLayoutGUI(const vtkCustomLayoutGUI&);
  void operator=(const vtkCustomLayoutGUI&);

  // Description:
  // Updates GUI widgets based on parameters values in MRML node
  void UpdateGUI();

  // Description:
  // updates status text in the slicer window.
  void SetSlicerText( const char *txt);
  // Description:
  // updates status text in the layout window.
  void SetEchoText( const char *txt);

  vtkCustomLayoutLogic *Logic;
  vtkMRMLCustomLayoutNode* CustomLayoutNode;

  vtkKWNotebook *Notebook;
  vtkSlicerModuleCollapsibleFrame *SpecificationFrame;
  vtkSlicerModuleCollapsibleFrame *EchoFrame;
  vtkKWEntry *RowEntry;
  vtkKWEntry *ColumnEntry;
  vtkKWEntry *LayoutNameEntry;
  vtkKWMenu *ContentMenu;  
  vtkKWMenu *SplitPaneMenu;
  vtkKWFrame *MainPane;
  
  int UpdatingGUI;
  int UpdatingMRML;

  // Description:
  // This flag gets set when the module is entered,
  // and unset when the module is exited. It is used
  // to put observers on and off the MRML Scene.
  bool Raised;

  // Description:
  // This flag gets set when th emodule is built.
  bool Built;
};

#endif

