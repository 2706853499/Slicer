// .NAME vtkPETCTFusionGUI
// .SECTION Description
// Slicer Welcome and Overview


#ifndef __vtkPETCTFusionGUI_h
#define __vtkPETCTFusionGUI_h

#include "vtkPETCTFusionWin32Header.h"
#include "vtkSlicerModuleGUI.h"
#include "vtkMRMLPETCTFusionNode.h"
#include "vtkPETCTFusionLogic.h"
#include "vtkSlicerModuleCollapsibleFrame.h"
#include <string>

class vtkKWFrame;
class vtkKWCheckButton;
class vtkSlicerNodeSelectorWidget;
class vtkKWRadioButton;
class vtkKWRadioButtonSet;
class vtkKWEntry;
class vtkKWPushButton;
class vtkKWLabel;
class vtkKWRange;
class vtkKWMenuButton;
class vtkSlicerPopUpHelpWidget;

class VTK_PETCTFUSION_EXPORT vtkPETCTFusionGUI : public vtkSlicerModuleGUI
{
  public:
  static vtkPETCTFusionGUI *New();
  vtkTypeRevisionMacro(vtkPETCTFusionGUI,vtkSlicerModuleGUI);
  void PrintSelf(ostream& os, vtkIndent indent);

  // Description:
  // Set the logic pointer from parent class pointer.
  // Overloads implementation in vtkSlicerModulesGUI
  // to allow loadable modules.
  virtual void SetModuleLogic ( vtkSlicerLogic *logic )
  {
  this->SetLogic(reinterpret_cast<vtkPETCTFusionLogic*> (logic)); 
  };

   // Description: Get/Set MRML node
  vtkGetObjectMacro (Logic, vtkPETCTFusionLogic);
  vtkSetObjectMacro (Logic, vtkPETCTFusionLogic);

  vtkGetObjectMacro (PETCTFusionNode, vtkMRMLPETCTFusionNode );
  vtkSetObjectMacro (PETCTFusionNode, vtkMRMLPETCTFusionNode );
  
  // Description:
  // Create widgets
  vtkGetObjectMacro(CTSelector, vtkSlicerNodeSelectorWidget);
  vtkGetObjectMacro(PETSelector, vtkSlicerNodeSelectorWidget);
  vtkGetObjectMacro(MaskSelector, vtkSlicerNodeSelectorWidget);
  vtkGetObjectMacro(LUTSelector, vtkSlicerNodeSelectorWidget);
  vtkGetObjectMacro(VolumeRenderCheckbox, vtkKWCheckButton);
  vtkGetObjectMacro(BodyQuantifierSelector, vtkKWRadioButtonSet);
  vtkGetObjectMacro(TissueConcentrationEntry, vtkKWEntry);
  vtkGetObjectMacro(InjectedDoseEntry, vtkKWEntry);
  vtkGetObjectMacro(LeanBodyMassEntry, vtkKWEntry);
  vtkGetObjectMacro(BodySurfaceAreaEntry, vtkKWEntry);
  vtkGetObjectMacro(PatientWeightEntry, vtkKWEntry);
  vtkGetObjectMacro(ComputeButton, vtkKWPushButton);
  vtkGetObjectMacro(SaveButton, vtkKWPushButton);
  vtkGetObjectMacro (GetFromDICOMButton, vtkKWPushButton );
  vtkGetObjectMacro(SUVmaxLabel, vtkKWLabel);
  vtkGetObjectMacro(SUVminLabel, vtkKWLabel);
  vtkGetObjectMacro(SUVmeanLabel, vtkKWLabel);
  vtkGetObjectMacro(SUVmaxmeanLabel, vtkKWLabel);
  vtkGetObjectMacro(HelpButton, vtkSlicerPopUpHelpWidget);
  vtkGetObjectMacro (ColorRange, vtkKWRange );
  vtkGetObjectMacro (DoseUnitsMenuButton, vtkKWMenuButton );
  vtkGetObjectMacro (TissueUnitsMenuButton, vtkKWMenuButton );
  vtkGetObjectMacro (WeightUnitsMenuButton, vtkKWMenuButton );

  virtual void BuildGUI ( );
  virtual void BuildDisplayFrame(vtkKWWidget *parent);
  virtual void BuildFusionFrame(vtkKWWidget *parent);
  virtual void BuildAnalysisFrame(vtkKWWidget *parent);
  virtual void BuildReportFrame( vtkKWWidget *parent);

  // Description:
  // This method is called when GUI is created, when a new PET volume
  // is selected. It clears the nuclear medicine DICOM tags, and the results.
  virtual void InitializeGUI ( );
  // Description:
  // This method is called when any other MRML event triggers a need
  // to update the GUI.  
  virtual void UpdateGUIFromMRML ( int updateDICOMevent );
  virtual void UpdateLUTFromMRML ();
  virtual void TearDownGUI ( );
  vtkIntArray *NewObservableEvents();

  virtual void ColorizePETVolume();
  virtual void ProcessColorRangeCommand (double min, double max);
  virtual void ProcessColorRangeStartCommand(double min, double max);
  virtual void ProcessColorRangeStopCommand ( double min, double max);

  // Description:
  // Add obsereves to GUI widgets
  virtual void AddGUIObservers ( );
  virtual void AddMRMLNodeObservers ( );

  // Description:
  // Remove obsereves to GUI widgets
  virtual void RemoveGUIObservers ( );
  virtual void RemoveMRMLNodeObservers( );
  
  virtual void EnablePETCTVolumeRendering();
  virtual void DisablePETCTVolumeRendering();

  // Description:
  // Pprocess events generated by GUI widgets
  virtual void ProcessGUIEvents ( vtkObject *caller, unsigned long event,
                                  void *callData );
  virtual void ProcessMRMLEvents ( vtkObject *caller, unsigned long event,
                                  void *callData );

  // Description:
  // Describe behavior at module startup and exit.
  virtual void Enter ( );
  virtual void Exit ( );
  virtual void Init ( );

  virtual void ClearDICOMInformation ( );

  virtual void ResetManualEntryGUI ( );

  // Description:
  // updates the panel containing information
  // grabbed from the dicom header.
  virtual void UpdateDICOMPanel ( );

  // Description:
  // updates node's color range based on GUI input
  virtual void UpdateNodeColorRange ( );
  // Description:
  // updates the display of colorized pet based on changes to
  // mrml color range. Changes window, level of PET
  // volume's display node.
  virtual void UpdatePETDisplayFromMRML ( );
  
  // Description:
  // Sets the max and min values in the PET dataset.
  virtual void InitializePETMinAndMax();
  virtual void UpdatePETRange();
  // Descriptoin:
  // Scales the color lut over a range of selected values.
  virtual void ScaleColormap(double min, double max);

protected:
  vtkPETCTFusionGUI();
  ~vtkPETCTFusionGUI();
  vtkPETCTFusionGUI(const vtkPETCTFusionGUI&);
  void operator=(const vtkPETCTFusionGUI&);

  // Description:
  // updates status text in the slicer window.
  void SetStatusText( const char *txt);

  vtkPETCTFusionLogic *Logic;
  vtkMRMLPETCTFusionNode *PETCTFusionNode;

  //---
  //--- widgets
  //---
  
  // Description:
  // Ruler GUI elements
  vtkSlicerNodeSelectorWidget* CTSelector;
  vtkSlicerNodeSelectorWidget* PETSelector;
  vtkSlicerNodeSelectorWidget* MaskSelector;
  vtkSlicerNodeSelectorWidget* LUTSelector;  
  vtkKWCheckButton *VolumeRenderCheckbox;
  vtkKWRadioButtonSet *BodyQuantifierSelector;
  vtkKWEntry *TissueConcentrationEntry;
  vtkKWEntry *InjectedDoseEntry;
  vtkKWEntry *LeanBodyMassEntry;
  vtkKWEntry *BodySurfaceAreaEntry;
  vtkKWEntry *PatientWeightEntry;
  vtkKWPushButton *ComputeButton;
  vtkKWPushButton *GetFromDICOMButton;
  vtkKWPushButton *SaveButton;
  vtkKWLabel *SUVmaxLabel;
  vtkKWLabel *SUVminLabel;
  vtkKWLabel *SUVmeanLabel;
  vtkKWLabel *SUVmaxmeanLabel;
  vtkSlicerPopUpHelpWidget *HelpButton;
  vtkKWMenuButton *DoseUnitsMenuButton;
  vtkKWMenuButton *WeightUnitsMenuButton;
  vtkKWMenuButton *TissueUnitsMenuButton;  
  vtkKWRange *ColorRange;
  bool Raised;
  
  //--- for internal use only.
  vtkKWLabel *PatientWeightLabel;
  vtkKWLabel *InjectedDoseLabel;
  vtkKWLabel *NumberOfTemporalPositionsLabel;
  vtkKWLabel *SeriesTimeLabel;
  vtkKWLabel *RPStartTimeLabel;
  vtkKWLabel *FrameReferenceTimeLabel;
  vtkKWLabel *DecayCorrectionLabel;
  vtkKWLabel *DecayFactorLabel;
  vtkKWLabel *RTHalfLifeLabel;
  vtkKWLabel *CalibrationFactorLabel;
  vtkKWLabel *PhilipsSUVFactorLabel;
  
  double PETMin;
  double PETMax;
  int UpdatingLUT;
  int UpdatingGUI;

};

#endif

